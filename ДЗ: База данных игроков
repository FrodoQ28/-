using System;
using System.Collections.Generic;

namespace HW_playersDataBase
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandAddPlayer = "1";
            const string CommandRemovePlayer = "2";
            const string CommandBanPlayer = "3";
            const string CommandUnbanPlayer = "4";
            const string CommandExit = "5";

            bool isRunning = true;

            Database database = new Database(new Dictionary<int, Player>());

            while (isRunning)
            {
                Console.Clear();
                Console.WriteLine("База данных игроков.");

                database.ShowAllPlayers();

                Console.WriteLine($"{new string('-', 120)}\n" +
                                  $"Добавить игрока - {CommandAddPlayer}\n" +
                                  $"Удалить игрока - {CommandRemovePlayer}\n" +
                                  $"Забанить игрока - {CommandBanPlayer}\n" +
                                  $"Разбанить игрока - {CommandUnbanPlayer}\n" +
                                  $"Закрыть программу - {CommandExit}\n" +
                                  $"Введите номер команды: ");

                switch (Console.ReadLine())
                {
                    case CommandAddPlayer:
                        database.AddPlayer();
                        break;

                    case CommandRemovePlayer:
                        database.RemovePlayer();
                        break;

                    case CommandBanPlayer:
                        database.BanPlayer();
                        break;

                    case CommandUnbanPlayer:
                        database.UnbanPlayer();
                        break;

                    case CommandExit:
                        isRunning = false;
                        break;

                    default:
                        Console.WriteLine("Такой томанды нет.");
                        break;
                }
            }
        }
    }

    class Database
    {
        private static int s_identifications;

        private Dictionary<int, Player> _database;

        public Database(Dictionary<int, Player> database)
        {
            _database = database;
        }

        public void ShowAllPlayers()
        {
            int numberOnList = 0;

            foreach (var data in _database)
                Console.WriteLine($"{++numberOnList}. {data.Value.Name}, уровень {data.Value.Level}, ID - {data.Key}, статус бана - {data.Value.IsBanned}.");
        }

        public void AddPlayer()
        {
            int identificationNumber = ++s_identifications;

            Console.Write("Введите ник игрока: ");
            string name = Console.ReadLine();
            Console.WriteLine("Введите уровень игрока: ");

            if (int.TryParse(Console.ReadLine(), out int level) == false)
                level = 1;

            _database.Add(identificationNumber, new Player(level, name));

            Console.WriteLine($"Игрок под ником {_database[identificationNumber].Name}, {_database[identificationNumber].Level} уровня добавлен.");
            Console.ReadKey();
        }

        public void RemovePlayer()
        {
            if (TryGetPlayer(out Player player))
            {
                foreach (var data in _database)
                    if (data.Value == player)
                    {
                        Console.WriteLine($"Игрок под ником {data.Value.Name}, {data.Value.Level} уровня удален.");

                        _database.Remove(data.Key);

                        Console.ReadKey();

                        break;
                    }
            }
            else
            {
                Console.WriteLine("Некорректный ввод, попробуйте еще раз.");
                Console.ReadKey();
            }
        }

        public bool TryGetPlayer(out Player player)
        {
            Console.WriteLine("Введите ID игрока: ");

            if (int.TryParse(Console.ReadLine(), out int identificationNumber))
                if (_database.ContainsKey(identificationNumber))
                {
                    player = _database[identificationNumber];
                    return true;
                }

            player = default;
            return false;
        }
        public void BanPlayer()
        {
            if (TryGetPlayer(out Player player))
            {
                player.Ban();

                Console.WriteLine($"Игрок под ником {player.Name}, {player.Level} уровня, статус бана - {player.IsBanned}.");
                Console.ReadKey();
            }
        }
        public void UnbanPlayer()
        {
            if (TryGetPlayer(out Player player))
            {
                player.Unban();

                Console.WriteLine($"Игрок под ником {player.Name}, {player.Level} уровня, статус бана - {player.IsBanned}.");
                Console.ReadKey();
            }
        }
    }
    class Player
    {
        public Player(int level, string name)
        {
            Level = level;
            Name = name;
            IsBanned = false;
        }

        public int Level { get; private set; }
        public string Name { get; private set; }
        public bool IsBanned { get; private set; }

        public void Ban()
        {
            IsBanned = true;
        }

        public void Unban()
        {
            IsBanned = false;
        }
    }
}
