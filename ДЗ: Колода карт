using System;
using System.Collections.Generic;

namespace HW_deckOfCards
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandTakeCard = "1";
            const string CommandExit = "2";

            bool isRunning = true;

            Croupier croupier;

            Console.Write("Введите имя игрока:");

            croupier = new Croupier(Console.ReadLine());

            while (isRunning)
            {
                Console.Clear();

                croupier.Player.ShowCards();

                Console.WriteLine($"{new string('*', 120)}" +
                                  $"Взять карту - {CommandTakeCard}\n" +
                                  $"Выход - {CommandExit}\n" +
                                  $"Введите команду:");

                switch (Console.ReadLine())
                {
                    case CommandTakeCard:
                        if (croupier.HasCard())
                            croupier.TakeCards();
                        break;

                    case CommandExit:
                        isRunning = false;
                        break;

                    default:
                        Console.WriteLine("Неверная команда.");
                        break;
                }
            }
        }
    }

    class Croupier
    {
        public Croupier(string name)
        {
            Deck = new Deck();
            Player = new Player(name);
        }

        public Deck Deck { get; private set; }
        public Player Player { get; private set; }

        public void TakeCards()
        {
            Console.Write("Сколько карт вы хотите взять?: ");

            if (int.TryParse(Console.ReadLine(), out int cardsNumber))
            {
                for (int i = 0; i < cardsNumber; i++)
                {
                    Player.AddCard(Deck.GetCardByIndex(0));
                    Deck.RemoveCard();
                }
            }
        }

        public bool HasCard()
        {
            return (Deck.GetCardByIndex(0) != null);
        }
    }

    class Player
    {
        private List<Card> _cardsOnHands;
        private string _name;

        public Player(string name)
        {
            _name = name;
            _cardsOnHands = new List<Card>();
        }

        public void AddCard(Card card)
        {
            _cardsOnHands.Add(card);
        }

        public void ShowCards()
        {
            Console.WriteLine($"{_name} Ваши карты:\n");

            foreach (var card in _cardsOnHands)
                Console.WriteLine(card.Suit + " " + card.Value);
        }
    }

    class Deck
    {
        private Random _random = new Random();

        private List<Card> _cards;
        public Deck()
        {
            _cards = new List<Card>();

            string[] suit = new string[]
             {
                    "Пики",
                    "Трефы",
                    "Бубны",
                    "Червы"
             };

            string[] value = new string[]
             {
                    "6",
                    "7",
                    "8",
                    "9",
                    "10",
                    "Валет",
                    "Дама",
                    "Король",
                    "Туз"
             };

            for (int i = 0; i < suit.Length; i++)
                for (int j = 0; j < value.Length; j++)
                    _cards.Add(new Card(suit[i], value[j]));

            Shuffle();
        }

        public Card GetCardByIndex(int index)
        {
            return _cards[index];
        }


        private void Shuffle()
        {
            int nextCard = _cards.Count;

            while (nextCard > 1)
            {
                int randomValue = _random.Next(nextCard + 1);
                nextCard--;
                Card tempCard = _cards[randomValue];
                _cards[randomValue] = _cards[nextCard];
                _cards[nextCard] = tempCard;
            }
        }

        public void RemoveCard()
        {
            _cards.RemoveAt(0);
        }
    }

    class Card
    {
        public Card(string suit, string value)
        {
            Suit = suit;
            Value = value;
        }

        public string Suit { get; private set; }
        public string Value { get; private set; }
    }
}
