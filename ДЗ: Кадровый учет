using System;
using System.Xml.Linq;

namespace HW_Personnel_accounting
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string AddDossierCommand = "1";
            const string AllDossierCommand = "2";
            const string DeleteDossierCommand = "3";
            const string SearchCommand = "4";
            const string ExitCommand = "exit";

            string[] names = new string[5]
            {
                "Иванов Иван Иванович",
                "Сидоров Сидор Сидорович",
                "Петров Петр Петрович",
                "Антонов Антон Антонович",
                "Анатольев Анатолий Анатольевич"
            };
            string[] positions = new string[5]
            {
                "Рабочий",
                "Прораб",
                "Инженер",
                "Мастер",
                "Хозяин"
            };

            bool isRunning = true;

            while (isRunning)
            {
                Console.Write($"Библиотека досье работников.\nДля работы с библиотекой используйте команды:\n" +
                    $"Добавить досье - {AddDossierCommand}\n" +
                    $"Показать все досье в библиотеке - {AllDossierCommand}\n" +
                    $"Удалить досье из библиотеки - {DeleteDossierCommand}\n" +
                    $"Поиск в досье по фамилии - {SearchCommand}\n" +
                    $"Выход из программы - {ExitCommand}\n" +
                    $"Введите команду: ");

                switch (Console.ReadLine())
                {
                    case AddDossierCommand:
                        AddDossier(ref names, ref positions);
                        break;

                    case AllDossierCommand:
                        DisplayArray(names, positions);
                        break;

                    case DeleteDossierCommand:
                        DeleteLine(ref names, ref positions);
                        break;

                    case SearchCommand:
                        RunSearch(names, positions);
                        break;

                    case ExitCommand:
                        isRunning = false;
                        break;

                    default:
                        Console.WriteLine("Введена неверная команда.");
                        break;
                }

                Console.ReadKey();
                Console.Clear();
            }
        }

        static string[] ExpandArray(string[] array, string addedLine)
        {
            string[] tempArray = new string[array.Length + 1];

            for (int i = 0; i < array.Length; i++)
            {
                tempArray[i] = array[i];
            }

            array = tempArray;
            array[array.Length - 1] = addedLine;

            return array;
        }

        static void AddDossier(ref string[] array, ref string[] array2)
        {
            string nameLine;
            string positionLine;

            Console.Write("Добавление досье в библиотеку\nВведите фамилию имя и отчество: ");
            nameLine = Console.ReadLine();
            Console.Write("Введите должность: ");
            positionLine = Console.ReadLine();

            array = ExpandArray(array, nameLine);
            array2 = ExpandArray(array2, positionLine);

            Console.Write($"{array.Length + ". " + array[array.Length - 1] + " - " + array2[array.Length - 1]} добавлен в библиотеку.");
        }

        static void DisplayArray(string[] array, string[] array2)
        {
            int numberOnList = 1;

            for (int i = 0; i < array.Length; i++)
            {
                Console.Write((i + numberOnList) + ". ");
                Console.Write(array[i] + " ");
                Console.WriteLine("- " + array2[i]);
            }
        }

        static void DeleteLine(ref string[] array, ref string[] array2)
        {
            Console.Write("Удаление досье из библиотеки\nВвдите номер досье для удаления: ");

            if (int.TryParse(Console.ReadLine(), out int deleteLine) && deleteLine <= array.Length)
            {
                array = DecreaseArray(array, deleteLine);
                array2 = DecreaseArray(array2, deleteLine);

                Console.WriteLine($"Строка {deleteLine} удалена.");
            }
            else
            {
                Console.WriteLine("Вы ввели не число или такой строки не существует.");
            }
        }

        static string[] DecreaseArray(string[] array, int deleteLine)
        {
            string[] tempArray = new string[array.Length - 1];

            array[deleteLine - 1] = string.Empty;

            for (int i = 0; i < array.Length - 1; i++)
            {
                if (array[i] == string.Empty)
                {
                    array[i] = array[i + 1];
                    array[i + 1] = string.Empty;
                }

                tempArray[i] = array[i];
            }

            array = tempArray;

            return array;
        }
        

        static void RunSearch(string[] array, string[] array2)
        {
            int lastNameIndex = 0;
            int lineNumber = 1;
            string output = string.Empty;
            string searchName = string.Empty;

            Console.Write("Поиск по фамилии.\nВведите фамилию: ");

            searchName = Console.ReadLine();

            Console.WriteLine("Результат поиска:");

            for (int i = 0; i < array.Length; i++)
            {
                string[] temp = array[i].Split(' ');

                if (searchName.ToLower() == temp[lastNameIndex].ToLower())
                {
                    output += (i + lineNumber) + ". " + array[i] + " - " + array2[i] + "\n";
                }
            }

            if (output == string.Empty)
            {
                output = "Совпадений не найдено.";
            }

            Console.WriteLine(output);
        }
    }
}
