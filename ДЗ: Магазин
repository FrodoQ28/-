using System;
using System.Collections.Generic;

namespace HW_Shop
{
    internal class Program
    {
        static void Main(string[] args)
        {
            ConsoleMenu menu = new ConsoleMenu();

            menu.GettingStarted();
        }
    }

    class ConsoleMenu
    {
        private Shop _shop;

        public ConsoleMenu()
        {
            _shop = new Shop();
        }

        public void GettingStarted()
        {
            const string CommandExit = "0";

            bool isRunning = true;

            while (isRunning)
            {
                string desiredProduct;

                Console.Clear();

                _shop.ShowAllStatistic();

                Console.WriteLine($"Добро пожаловать в магазин.\nДля выхода введите - {CommandExit}\nВведите название товара который желаете купить:");

                desiredProduct = Console.ReadLine().ToLower();

                if (desiredProduct != CommandExit)
                {
                    _shop.Sell(desiredProduct);
                }
                else
                {
                    isRunning = false;
                }
            }
        }
    }

    class Shop
    {
        private Random _random = new Random();

        private Dictionary<string, int> _prices;

        private Buyer _buyer;
        private Seller _seller;

        public Shop()
        {
            _prices = new Dictionary<string, int>(StringComparer.OrdinalIgnoreCase);

            List<string> products = ProductsAdding();

            _buyer = new Buyer();
            _seller = new Seller(products);
        }

        private List<string> ProductsAdding()
        {
            int minPrice = 1;
            int maxPrice = 51;

            List<string> products = new List<string>()
            {
                "Яблоко",
                "Груша",
                "Помидор",
                "Апельсин",
                "Банан",
            };

            foreach (var product in products)
                _prices.Add(product, _random.Next(minPrice, maxPrice));

            return products;
        }

        private void ShowPriceProducts()
        {
            Console.WriteLine("Цены продуктов:");

            foreach (var product in _prices)
                Console.WriteLine($"{product.Key} - {product.Value} руб.");
        }

        public void Sell(string product)
        {
            if (_seller.TryHasProduct(ref product))
            {
                int productPrice = _prices[product];

                if (_buyer.HasMoney(productPrice))
                {
                    _seller.Sell(product, productPrice);
                    _buyer.Buy(product, productPrice);
                }
                else
                {
                    Console.WriteLine("Недостаточно средств для покупки.");
                    Console.ReadKey();
                }
            }
            else
            {
                Console.WriteLine("Товара нет в наличии.");
                Console.ReadKey();
            }
        }

        public void ShowAllStatistic()
        {
            Console.Write(new string('*', 120));
            ShowPriceProducts();

            Console.Write(new string('*', 120) + "Деньги магазина: ");
            _seller.ShowMoney();

            Console.WriteLine("Товар в наличии: ");
            _seller.ShowProducts();

            Console.Write(new string('*', 120) + "Ваши деньги: ");
            _buyer.ShowMoney();

            Console.WriteLine("Ваши покупки:");
            _buyer.ShowProducts();

            Console.WriteLine(new string('*', 120));
        }
    }

    class Person
    {
        protected int Money;

        protected List<string> Products;

        public void ShowMoney()
        {
            Console.WriteLine(Money);
        }

        public void ShowProducts()
        {
            foreach (var product in Products)
                Console.WriteLine(product);
        }
    }

    class Seller : Person
    {
        public Seller(List<string> products)
        {
            Products = new List<string>();

            ProductsAdding(products);
        }

        private void ProductsAdding(List<string> products)
        {
            foreach (var product in products)
                Products.Add(product);
        }

        public void Sell(string product, int productPrice)
        {
            Money += productPrice;
            Products.Remove(product);
        }

        public bool TryHasProduct(ref string desiredProduct)
        {
            bool hasProduct = false;

            foreach (var product in Products)
            {
                if (string.Equals(product, desiredProduct, StringComparison.CurrentCultureIgnoreCase))
                {
                    desiredProduct = product;
                    hasProduct = true;
                }
            }

            return hasProduct;
        }
    }

    class Buyer : Person
    {
        public Buyer()
        {
            Products = new List<string>();

            Money = 100;
        }

        public bool HasMoney(int productPrice)
        {
            bool hasMoney = Money >= productPrice;

            return hasMoney;
        }

        public void Buy(string product, int productPrice)
        {
            Products.Add(product);
            Money -= productPrice;
        }
    }
}
